version: '3.7'
services:
    mysql:
        image: mysql
        container_name: "mysql"
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root123
        ports:
            - "3306:3306"
        volumes:
            - ./db/mysql:/var/lib/mysql
        networks:
            - docker_webstack
    mssql:
        image: mcr.microsoft.com/mssql/server
        container_name: "mssql"
        restart: always
        ports:
            - "1433:1433"
        volumes:
            - "./db/mssql:/var/opt/mssql/data"
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=P@ssw0rd
        networks:
            - docker_webstack
    nginx:
        image: nginx:latest
        container_name: "nginx"
        ports:
            - "80:80"
            - "443:443"
        restart: always
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/ssl:/etc/ssl"
            - "./projects/:/var/www/projects"
        depends_on:
            - php8.fpm
            - php7.fpm
            - mysql
            - mssql
            - mailhog
        networks:
            - docker_webstack
    php8.fpm:
        build: php-stack-8-fpm
        container_name: "php8.fpm"
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./projects/:/var/www/projects"
        networks:
            - docker_webstack
    php7.fpm:
        build: php-stack-7-fpm
        container_name: "php7.fpm"
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./projects/:/var/www/projects"
        networks:
            - docker_webstack
    mailhog:
        image: mailhog/mailhog
        container_name: "mailhog"
        restart: always
        logging:
            driver: 'none' # disable saving logs
        ports:
            - "1025:1025" # smtp server
            - "8025:8025" # web ui
        networks:
            - docker_webstack
    redis:
        image: redis
        container_name: "redis"
        restart: always
        volumes:
            - ./db/redis:/data/db
        ports:
            - "6379:6379"
        networks:
            - docker_webstack
networks:
    docker_webstack:
        driver: bridge
